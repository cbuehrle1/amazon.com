{"version":3,"sources":["src/button.js"],"names":["Button","$","NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","fn","ClassName","ACTIVE","BUTTON","FOCUS","Selector","DATA_TOGGLE_CARROT","DATA_TOGGLE","INPUT","Event","CLICK_DATA_API","FOCUS_BLUR_DATA_API","element","_element","triggerChangeEvent","rootElement","closest","input","find","type","checked","hasClass","activeElement","removeClass","trigger","focus","setAttribute","toggleClass","removeData","config","each","data","document","on","event","preventDefault","button","target","_jQueryInterface","call","test","Constructor","noConflict","jQuery"],"mappings":"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","file":"button.js","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.6): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst Button = (($) => {\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const NAME                = 'button'\n  const VERSION             = '4.0.0-alpha.6'\n  const DATA_KEY            = 'bs.button'\n  const EVENT_KEY           = `.${DATA_KEY}`\n  const DATA_API_KEY        = '.data-api'\n  const JQUERY_NO_CONFLICT  = $.fn[NAME]\n\n  const ClassName = {\n    ACTIVE : 'active',\n    BUTTON : 'btn',\n    FOCUS  : 'focus'\n  }\n\n  const Selector = {\n    DATA_TOGGLE_CARROT : '[data-toggle^=\"button\"]',\n    DATA_TOGGLE        : '[data-toggle=\"buttons\"]',\n    INPUT              : 'input',\n    ACTIVE             : '.active',\n    BUTTON             : '.btn'\n  }\n\n  const Event = {\n    CLICK_DATA_API      : `click${EVENT_KEY}${DATA_API_KEY}`,\n    FOCUS_BLUR_DATA_API : `focus${EVENT_KEY}${DATA_API_KEY} `\n                        + `blur${EVENT_KEY}${DATA_API_KEY}`\n  }\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class Button {\n\n    constructor(element) {\n      this._element = element\n    }\n\n\n    // getters\n\n    static get VERSION() {\n      return VERSION\n    }\n\n\n    // public\n\n    toggle() {\n      let triggerChangeEvent = true\n      const rootElement      = $(this._element).closest(\n        Selector.DATA_TOGGLE\n      )[0]\n\n      if (rootElement) {\n        const input = $(this._element).find(Selector.INPUT)[0]\n\n        if (input) {\n          if (input.type === 'radio') {\n            if (input.checked &&\n              $(this._element).hasClass(ClassName.ACTIVE)) {\n              triggerChangeEvent = false\n\n            } else {\n              const activeElement = $(rootElement).find(Selector.ACTIVE)[0]\n\n              if (activeElement) {\n                $(activeElement).removeClass(ClassName.ACTIVE)\n              }\n            }\n          }\n\n          if (triggerChangeEvent) {\n            input.checked = !$(this._element).hasClass(ClassName.ACTIVE)\n            $(input).trigger('change')\n          }\n\n          input.focus()\n        }\n\n      }\n\n      this._element.setAttribute('aria-pressed',\n        !$(this._element).hasClass(ClassName.ACTIVE))\n\n      if (triggerChangeEvent) {\n        $(this._element).toggleClass(ClassName.ACTIVE)\n      }\n    }\n\n    dispose() {\n      $.removeData(this._element, DATA_KEY)\n      this._element = null\n    }\n\n\n    // static\n\n    static _jQueryInterface(config) {\n      return this.each(function () {\n        let data = $(this).data(DATA_KEY)\n\n        if (!data) {\n          data = new Button(this)\n          $(this).data(DATA_KEY, data)\n        }\n\n        if (config === 'toggle') {\n          data[config]()\n        }\n      })\n    }\n\n  }\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n  $(document)\n    .on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, (event) => {\n      event.preventDefault()\n\n      let button = event.target\n\n      if (!$(button).hasClass(ClassName.BUTTON)) {\n        button = $(button).closest(Selector.BUTTON)\n      }\n\n      Button._jQueryInterface.call($(button), 'toggle')\n    })\n    .on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, (event) => {\n      const button = $(event.target).closest(Selector.BUTTON)[0]\n      $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type))\n    })\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME]             = Button._jQueryInterface\n  $.fn[NAME].Constructor = Button\n  $.fn[NAME].noConflict  = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT\n    return Button._jQueryInterface\n  }\n\n  return Button\n\n})(jQuery)\n\nexport default Button\n"]}